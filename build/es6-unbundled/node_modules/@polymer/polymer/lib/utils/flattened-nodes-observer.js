import"./boot.js";import{calculateSplices}from"./array-splice.js";import{microTask}from"./async.js";function isSlot(a){return"slot"===a.localName}class FlattenedNodesObserver{static getFlattenedNodes(a){return isSlot(a)?(a=a,a.assignedNodes({flatten:!0})):Array.from(a.childNodes).map(a=>isSlot(a)?(a=a,a.assignedNodes({flatten:!0})):[a]).reduce((c,a)=>c.concat(a),[])}constructor(a,b){this._shadyChildrenObserver=null,this._nativeChildrenObserver=null,this._connected=!1,this._target=a,this.callback=b,this._effectiveNodes=[],this._observer=null,this._scheduled=!1,this._boundSchedule=()=>{this._schedule()},this.connect(),this._schedule()}connect(){isSlot(this._target)?this._listenSlots([this._target]):this._target.children&&(this._listenSlots(this._target.children),window.ShadyDOM?this._shadyChildrenObserver=ShadyDOM.observeChildren(this._target,a=>{this._processMutations(a)}):(this._nativeChildrenObserver=new MutationObserver(a=>{this._processMutations(a)}),this._nativeChildrenObserver.observe(this._target,{childList:!0}))),this._connected=!0}disconnect(){isSlot(this._target)?this._unlistenSlots([this._target]):this._target.children&&(this._unlistenSlots(this._target.children),window.ShadyDOM&&this._shadyChildrenObserver?(ShadyDOM.unobserveChildren(this._shadyChildrenObserver),this._shadyChildrenObserver=null):this._nativeChildrenObserver&&(this._nativeChildrenObserver.disconnect(),this._nativeChildrenObserver=null)),this._connected=!1}_schedule(){this._scheduled||(this._scheduled=!0,microTask.run(()=>this.flush()))}_processMutations(a){this._processSlotMutations(a),this.flush()}_processSlotMutations(a){if(a)for(let b,c=0;c<a.length;c++)b=a[c],b.addedNodes&&this._listenSlots(b.addedNodes),b.removedNodes&&this._unlistenSlots(b.removedNodes)}flush(){if(!this._connected)return!1;window.ShadyDOM&&ShadyDOM.flush(),this._nativeChildrenObserver?this._processSlotMutations(this._nativeChildrenObserver.takeRecords()):this._shadyChildrenObserver&&this._processSlotMutations(this._shadyChildrenObserver.takeRecords()),this._scheduled=!1;let a={target:this._target,addedNodes:[],removedNodes:[]},b=this.constructor.getFlattenedNodes(this._target),c=calculateSplices(b,this._effectiveNodes);for(let b,d=0;d<c.length&&(b=c[d]);d++)for(let c,d=0;d<b.removed.length&&(c=b.removed[d]);d++)a.removedNodes.push(c);for(let d,e=0;e<c.length&&(d=c[e]);e++)for(let c=d.index;c<d.index+d.addedCount;c++)a.addedNodes.push(b[c]);this._effectiveNodes=b;let d=!1;return(a.addedNodes.length||a.removedNodes.length)&&(d=!0,this.callback.call(this._target,a)),d}_listenSlots(a){for(let b,c=0;c<a.length;c++)b=a[c],isSlot(b)&&b.addEventListener("slotchange",this._boundSchedule)}_unlistenSlots(a){for(let b,c=0;c<a.length;c++)b=a[c],isSlot(b)&&b.removeEventListener("slotchange",this._boundSchedule)}}export{FlattenedNodesObserver};