import"./boot.js";export function isPath(a){return 0<=a.indexOf(".")}export function root(a){let b=a.indexOf(".");return-1===b?a:a.slice(0,b)}export function isAncestor(a,b){return 0===a.indexOf(b+".")}export function isDescendant(a,b){return 0===b.indexOf(a+".")}export function translate(a,b,c){return b+c.slice(a.length)}export function matches(a,b){return a===b||isAncestor(a,b)||isDescendant(a,b)}export function normalize(a){if(Array.isArray(a)){let b=[];for(let c,d=0;d<a.length;d++){c=a[d].toString().split(".");for(let a=0;a<c.length;a++)b.push(c[a])}return b.join(".")}return a}export function split(a){return Array.isArray(a)?normalize(a).split("."):a.toString().split(".")}export function get(a,b,c){let d=a,e=split(b);for(let f=0;f<e.length;f++){if(!d)return;let a=e[f];d=d[a]}return c&&(c.path=e.join(".")),d}export function set(a,b,c){let d=a,e=split(b),f=e[e.length-1];if(1<e.length){for(let a,b=0;b<e.length-1;b++)if(a=e[b],d=d[a],!d)return;d[f]=c}else d[b]=c;return e.join(".")}export const isDeep=isPath;