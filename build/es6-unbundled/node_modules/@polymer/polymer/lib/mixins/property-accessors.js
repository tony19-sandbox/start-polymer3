import"../utils/boot.js";import{dedupingMixin}from"../utils/mixin.js";import*as caseMap$0 from"../utils/case-map.js";import{PropertiesChanged}from"./properties-changed.js";let caseMap=caseMap$0;const nativeProperties={};for(let a=HTMLElement.prototype;a;){let b=Object.getOwnPropertyNames(a);for(let a=0;a<b.length;a++)nativeProperties[b[a]]=!0;a=Object.getPrototypeOf(a)}function saveAccessorValue(a,b){if(!nativeProperties[b]){let c=a[b];c!==void 0&&(a.__data?a._setPendingProperty(b,c):(a.__dataProto?!a.hasOwnProperty(JSCompiler_renameProperty("__dataProto",a))&&(a.__dataProto=Object.create(a.__dataProto)):a.__dataProto={},a.__dataProto[b]=c))}}export const PropertyAccessors=dedupingMixin(a=>{const b=PropertiesChanged(a);return class extends b{static createPropertiesForAttributes(){let a=this.observedAttributes;for(let b=0;b<a.length;b++)this.prototype._createPropertyAccessor(caseMap.dashToCamelCase(a[b]))}static attributeNameForProperty(a){return caseMap.camelToDashCase(a)}_initializeProperties(){this.__dataProto&&(this._initializeProtoProperties(this.__dataProto),this.__dataProto=null),super._initializeProperties()}_initializeProtoProperties(a){for(let b in a)this._setProperty(b,a[b])}_ensureAttribute(a,b){const c=this;c.hasAttribute(a)||this._valueToNodeAttribute(c,b,a)}_serializeValue(a){switch(typeof a){case"object":if(a instanceof Date)return a.toString();if(a)try{return JSON.stringify(a)}catch(a){return""}default:return super._serializeValue(a);}}_deserializeValue(a,b){let c;switch(b){case Object:try{c=JSON.parse(a)}catch(b){c=a}break;case Array:try{c=JSON.parse(a)}catch(b){c=null,console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${a}`)}break;case Date:c=isNaN(a)?a+"":+a,c=new Date(c);break;default:c=super._deserializeValue(a,b);}return c}_definePropertyAccessor(a,b){saveAccessorValue(this,a),super._definePropertyAccessor(a,b)}_hasAccessor(a){return this.__dataHasAccessor&&this.__dataHasAccessor[a]}_isPropertyPending(a){return!!(this.__dataPending&&a in this.__dataPending)}}});