import{LegacyElementMixin}from"./legacy-element-mixin.js";import{DomModule}from"../elements/dom-module.js";let metaProps={attached:!0,detached:!0,ready:!0,created:!0,beforeRegister:!0,registered:!0,attributeChanged:!0,behaviors:!0};function mixinBehaviors(a,b){if(!a)return b=b,b;b=LegacyElementMixin(b),Array.isArray(a)||(a=[a]);let c=b.prototype.behaviors;return a=flattenBehaviors(a,null,c),b=_mixinBehaviors(a,b),c&&(a=c.concat(a)),b.prototype.behaviors=a,b}function _mixinBehaviors(a,c){for(let d,b=0;b<a.length;b++)d=a[b],d&&(c=Array.isArray(d)?_mixinBehaviors(d,c):GenerateClassFromInfo(d,c));return c}function flattenBehaviors(a,c,d){c=c||[];for(let e,b=a.length-1;0<=b;b--)e=a[b],e?Array.isArray(e)?flattenBehaviors(e,c):0>c.indexOf(e)&&(!d||0>d.indexOf(e))&&c.unshift(e):console.warn("behavior is null, check for missing or 404 import");return c}function GenerateClassFromInfo(b,a){class c extends a{static get properties(){return b.properties}static get observers(){return b.observers}static get template(){return b._template||DomModule&&DomModule.import(this.is,"template")||a.template||this.prototype._template||null}created(){super.created(),b.created&&b.created.call(this)}_registered(){super._registered(),b.beforeRegister&&b.beforeRegister.call(Object.getPrototypeOf(this)),b.registered&&b.registered.call(Object.getPrototypeOf(this))}_applyListeners(){if(super._applyListeners(),b.listeners)for(let a in b.listeners)this._addMethodEventListenerToNode(this,a,b.listeners[a])}_ensureAttributes(){if(b.hostAttributes)for(let c in b.hostAttributes)this._ensureAttribute(c,b.hostAttributes[c]);super._ensureAttributes()}ready(){super.ready(),b.ready&&b.ready.call(this)}attached(){super.attached(),b.attached&&b.attached.call(this)}detached(){super.detached(),b.detached&&b.detached.call(this)}attributeChanged(a,c,d){super.attributeChanged(a,c,d),b.attributeChanged&&b.attributeChanged.call(this,a,c,d)}}for(let d in c.generatedFrom=b,b)if(!(d in metaProps)){let a=Object.getOwnPropertyDescriptor(b,d);a&&Object.defineProperty(c.prototype,d,a)}return c}export const Class=function(a){a||console.warn("Polymer.Class requires `info` argument");let b=GenerateClassFromInfo(a,a.behaviors?mixinBehaviors(a.behaviors,HTMLElement):LegacyElementMixin(HTMLElement));return b.is=a.is,b};export{mixinBehaviors};