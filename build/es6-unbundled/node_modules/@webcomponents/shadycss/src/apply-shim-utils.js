"use strict";import templateMap from"./template-map.js";import{StyleNode}from"./css-parse.js";const CURRENT_VERSION="_applyShimCurrentVersion",NEXT_VERSION="_applyShimNextVersion",VALIDATING_VERSION="_applyShimValidatingVersion",promise=Promise.resolve();export function invalidate(a){let b=templateMap[a];b&&invalidateTemplate(b);}export function invalidateTemplate(a){a._applyShimCurrentVersion=a._applyShimCurrentVersion||0,a[VALIDATING_VERSION]=a[VALIDATING_VERSION]||0,a[NEXT_VERSION]=(a[NEXT_VERSION]||0)+1;}export function isValid(a){let b=templateMap[a];return!b||templateIsValid(b);}export function templateIsValid(a){return a._applyShimCurrentVersion===a[NEXT_VERSION];}export function isValidating(a){let b=templateMap[a];return!!b&&templateIsValidating(b);}export function templateIsValidating(a){return!templateIsValid(a)&&a[VALIDATING_VERSION]===a[NEXT_VERSION];}export function startValidating(a){let b=templateMap[a];startValidatingTemplate(b);}export function startValidatingTemplate(a){a[VALIDATING_VERSION]=a[NEXT_VERSION],a._validating||(a._validating=!0,promise.then(function(){a._applyShimCurrentVersion=a[NEXT_VERSION],a._validating=!1;}));}export function elementsAreInvalid(){for(let a in templateMap){let b=templateMap[a];if(!templateIsValid(b))return!0;}return!1;}