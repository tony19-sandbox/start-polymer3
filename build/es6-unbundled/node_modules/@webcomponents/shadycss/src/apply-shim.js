"use strict";import{forEachRule,processVariableAndFallback,rulesForStyle,toCssText,gatherStyleText}from"./style-util.js";import{MIXIN_MATCH,VAR_ASSIGN}from"./common-regex.js";import{detectMixin}from"./common-utils.js";import{StyleNode}from"./css-parse.js";const APPLY_NAME_CLEAN=/;\s*/m,INITIAL_INHERIT=/^\s*(initial)|(inherit)\s*$/,IMPORTANT=/\s*!important/,MIXIN_VAR_SEP="_-_";let PropertyEntry,DependantsEntry,MixinMapEntry;class MixinMap{constructor(){this._map={};}set(a,b){a=a.trim(),this._map[a]={properties:b,dependants:{}};}get(a){return a=a.trim(),this._map[a]||null;}}let invalidCallback=null;class ApplyShim{constructor(){this._currentElement=null,this._measureElement=null,this._map=new MixinMap();}detectMixin(a){return detectMixin(a);}gatherStyles(a){const b=gatherStyleText(a.content);if(b){const c=document.createElement("style");return c.textContent=b,a.content.insertBefore(c,a.content.firstChild),c;}return null;}transformTemplate(a,b){a._gatheredStyle===void 0&&(a._gatheredStyle=this.gatherStyles(a));const c=a._gatheredStyle;return c?this.transformStyle(c,b):null;}transformStyle(a,b=""){let c=rulesForStyle(a);return this.transformRules(c,b),a.textContent=toCssText(c),c;}transformCustomStyle(a){let b=rulesForStyle(a);return forEachRule(b,a=>{":root"===a.selector&&(a.selector="html"),this.transformRule(a);}),a.textContent=toCssText(b),b;}transformRules(a,b){this._currentElement=b,forEachRule(a,a=>{this.transformRule(a);}),this._currentElement=null;}transformRule(a){a.cssText=this.transformCssText(a.parsedCssText),":root"===a.selector&&(a.selector=":host > *");}transformCssText(a){return a=a.replace(VAR_ASSIGN,(a,b,c,d)=>this._produceCssProperties(a,b,c,d)),this._consumeCssProperties(a);}_getInitialValueForProperty(a){return this._measureElement||(this._measureElement=document.createElement("meta"),this._measureElement.setAttribute("apply-shim-measure",""),this._measureElement.style.all="initial",document.head.appendChild(this._measureElement)),window.getComputedStyle(this._measureElement).getPropertyValue(a);}_consumeCssProperties(a){for(let b=null;b=MIXIN_MATCH.exec(a);){let c=b[0],d=b[1],e=b.index,f=e+c.indexOf("@apply"),g=e+c.length,h=a.slice(0,f),i=a.slice(g),j=this._cssTextToMap(h),k=this._atApplyToCssProperties(d,j);a=`${h}${k}${i}`,MIXIN_MATCH.lastIndex=e+k.length;}return a;}_atApplyToCssProperties(a,b){a=a.replace(APPLY_NAME_CLEAN,"");let c=[],d=this._map.get(a);if(d||(this._map.set(a,{}),d=this._map.get(a)),d){this._currentElement&&(d.dependants[this._currentElement]=!0);let e,g,h;const f=d.properties;for(e in f)h=b&&b[e],g=[e,": var(",a,MIXIN_VAR_SEP,e],h&&g.push(",",h.replace(IMPORTANT,"")),g.push(")"),IMPORTANT.test(f[e])&&g.push(" !important"),c.push(g.join(""));}return c.join("; ");}_replaceInitialOrInherit(a,b){let c=INITIAL_INHERIT.exec(b);return c&&(c[1]?b=this._getInitialValueForProperty(a):b="apply-shim-inherit"),b;}_cssTextToMap(a){let b,c,d=a.split(";"),e={};for(let f,g,h=0;h<d.length;h++)f=d[h],f&&(g=f.split(":"),1<g.length&&(b=g[0].trim(),c=this._replaceInitialOrInherit(b,g.slice(1).join(":")),e[b]=c));return e;}_invalidateMixinEntry(a){if(invalidCallback)for(let b in a.dependants)b!==this._currentElement&&invalidCallback(b);}_produceCssProperties(a,b,c,d){if(c&&processVariableAndFallback(c,(a,b)=>{b&&this._map.get(b)&&(d=`@apply ${b};`);}),!d)return a;let e=this._consumeCssProperties(d),f=a.slice(0,a.indexOf("--")),g=this._cssTextToMap(e),h=g,i=this._map.get(b),j=i&&i.properties;j?h=Object.assign(Object.create(j),g):this._map.set(b,h);let k,l,m=[],n=!1;for(k in h)l=g[k],void 0===l&&(l="initial"),j&&!(k in j)&&(n=!0),m.push(`${b}${MIXIN_VAR_SEP}${k}: ${l}`);return n&&this._invalidateMixinEntry(i),i&&(i.properties=h),c&&(f=`${a};${f}`),`${f}${m.join("; ")};`;}}ApplyShim.prototype.detectMixin=ApplyShim.prototype.detectMixin,ApplyShim.prototype.transformStyle=ApplyShim.prototype.transformStyle,ApplyShim.prototype.transformCustomStyle=ApplyShim.prototype.transformCustomStyle,ApplyShim.prototype.transformRules=ApplyShim.prototype.transformRules,ApplyShim.prototype.transformRule=ApplyShim.prototype.transformRule,ApplyShim.prototype.transformTemplate=ApplyShim.prototype.transformTemplate,ApplyShim.prototype._separator=MIXIN_VAR_SEP,Object.defineProperty(ApplyShim.prototype,"invalidCallback",{get(){return invalidCallback;},set(a){invalidCallback=a;}});export default ApplyShim;